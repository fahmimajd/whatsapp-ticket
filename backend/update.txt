Itu error klasik TypeORM: No metadata for "User" was found muncul saat getRepository(User) dipanggil, tetapi User yang kamu kirim ke TypeORM berbeda dengan User yang didaftarkan di AppDataSource—alias TypeORM tidak mengenali entitasnya.

Penyebab paling umum (dan cocok dengan repo kamu):

Import ganda/beda jalur untuk entitas
Ada file yang meng-import entitas pakai akhiran .js (ESM style), sementara file lain tanpa akhiran. Ini bikin Node/ts-node memuat dua versi kelas User (modul berbeda), sehingga AppDataSource mendaftarkan satu versi, tapi AuthService meminta repo untuk versi lainnya → metadata tidak ketemu.

Inisialisasi/registrasi entitas tidak konsisten
DataSource memuat entitas (OK), tapi service meng-import User dari path lain/berbeda resolusi (lihat poin 1).
(Kurang umum: AppDataSource belum di-initialize saat login dipanggil — tapi index.ts kamu sudah await AppDataSource.initialize() sebelum listen.)

Perbaikan cepat (pilih salah satu pendekatan — SARANKU: Pendekatan A)
A) Standarkan import tanpa akhiran .js (cocok dengan moduleResolution: "Node")

Pastikan semua import lokal di file TypeScript tanpa .js.

Contoh (perbaiki di WhatsAppService.ts dan file lain kalau masih ada):

// from (jangan pakai .js di TS)
import { TicketService } from './TicketService'
import { io } from '../ws'
import { AppDataSource } from '../database/data-source'
import { Attachment } from '../entities/Attachment'


Lalu pastikan semua file (AuthService, routes, services lain) konsisten pakai gaya yang sama (tanpa .js).

Hint cari cepat:

Linux/Mac: grep -R "from '.*\\.js'" -n src

Windows PowerShell: Get-ChildItem -Recurse src | Select-String "from '.*\.js'"

B) (Alternatif) Ubah ke NodeNext dan konsisten pakai .js di TS

Kalau kamu memang mau gaya ESM penuh:

Ubah tsconfig.json:

{
  "compilerOptions": {
    "module": "NodeNext",
    "moduleResolution": "NodeNext",
    ...
  }
}


Lalu semua import lokal di TS harus pakai .js (supaya cocok dengan output).

Tambahan hardening (opsional tapi membantu debug)

Log entitas terdaftar saat startup
Di src/index.ts, setelah await AppDataSource.initialize():

console.log('[db] entities:', AppDataSource.entityMetadatas.map(m => m.name))


Harusnya ada: User, Role, Ticket, Message, Attachment, WhatsAppSession.

Pastikan dekorator aman dari refleksi
Kamu sudah import 'reflect-metadata' di baris pertama src/index.ts ✔
Kita juga sudah eksplisitkan tipe kolom untuk entity lain. Untuk User, kalau perlu aman maksimal:

@Column({ type: 'varchar', length: 255 }) username!: string
@Column({ type: 'varchar', length: 255 }) passwordHash!: string


(Biasanya tak wajib kalau metadata refleksi berjalan, tapi ini menghindari error “Column type … cannot be guessed”.)

Jalankan ulang bersih

rm -rf dist
pkill -f ts-node-dev  # atau stop proses dev yang lama
npm run dev

Kenapa error muncul saat hit /api/auth/login?

AuthService.login() memanggil:

const repo = AppDataSource.getRepository(User)


Kalau User yang di-import di sini ≠ User yang didaftarkan di AppDataSource.entities, TypeORM menganggap “tidak ada metadata untuk User” → error yang kamu lihat.